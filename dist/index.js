"use strict";exports.__esModule=!0;var Heimdall=function(){function s(){this.observers={},this.$subject=null,this.subscribe=this.subscribe.bind(this),this.unsubscribe=this.unsubscribe.bind(this),this.unsubscribeAll=this.unsubscribeAll.bind(this),this.notify=this.notify.bind(this)}return s.prototype.setSubject=function(s){this.$subject=s},s.prototype.subscribe=function(s,t){var e="string"==typeof s;if(e&&!t)throw new Error("You need to pass an observer function as second param when you add a name to an observer");var i={name:e?s:null,fn:e?t:s};this.observers[this.$subject].push(i)},s.prototype.unsubscribe=function(t){this.observers[this.$subject]=this.observers[this.$subject].filter(function(s){return s.name!==t})},s.prototype.unsubscribeAll=function(s){this.observers[this.$subject]=[]},s.prototype.notify=function(s,t){var e=this.observers[this.$subject];if(e&&e.length)if(t)if("string"!=typeof t){var i=e.filter(function(s){return t.includes(s.name)});for(var r in i)i[r].fn(s)}else{var n=e.find(function(s){return s.name===t});if(!n)throw new Error("The observer "+t+" was not found on observers list.");n.fn(s)}else for(var r in e)e[r].fn(s)},s.prototype.subject=function(s,t){return this.observers[s]=[],this.setSubject(s),t(this.notify),{subscribe:this.subscribe,unsubscribe:this.unsubscribe,unsubscribeAll:this.unsubscribeAll}},s}();exports.default=new Heimdall;